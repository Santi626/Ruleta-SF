/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import BaseDatos.DataBase;
import Clases.ErrorException;
import Clases.GestorMail;
import Clases.GestorUsuarios;
import Clases.Mesa;
import Clases.Usuario;
import java.awt.Color;
import java.io.IOException;
import java.net.Socket;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author santi
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    private Socket cliente;
    private int puerto = 9999;
    private String ip = "127.0.0.1";

    public Login() {
        try {
            initComponents();

            DataBase.setConexion("", "ruletasf", "ruletasf", "jdbc:oracle:thin:@localhost:1521:XE");
        } catch (ErrorException ex) {
            JOptionPane.showMessageDialog(null, "Ha habido un problema con la conexión.");
            btEntrar.setEnabled(false);
            btEntrarComoInvitado.setEnabled(false);
            labelCrearCuenta.setVisible(false);
            labelOlvidarContrasena.setVisible(false);
        }
        //Arma la mesa de la ruleta
        Mesa.armarMesa();
        //Mesa.imprimirRuleta();

        this.setLocationRelativeTo(null);
        this.setTitle("Ruleta SF - Iniciar Sesión");
        this.setIconImage(new ImageIcon(getClass().getResource("/Recursos/login.png")).getImage());
        this.setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFechaNacimiento = new javax.swing.JPanel();
        dcFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        panelCorreo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfCorreo = new javax.swing.JTextField();
        jPanelimagen1 = new PanelImagen.jPanelimagen();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbMostrarPassword = new javax.swing.JCheckBox();
        tfUsuario = new javax.swing.JTextField();
        tfPassword = new javax.swing.JPasswordField();
        btEntrarComoInvitado = new javax.swing.JButton();
        labelCrearCuenta = new javax.swing.JLabel();
        btEntrar = new javax.swing.JButton();
        labelOlvidarContrasena = new javax.swing.JLabel();

        panelFechaNacimiento.setToolTipText("");

        dcFechaNacimiento.setDateFormatString("yyyy-MM-dd");

        jLabel4.setText("*Fecha de Nacimiento: ");

        javax.swing.GroupLayout panelFechaNacimientoLayout = new javax.swing.GroupLayout(panelFechaNacimiento);
        panelFechaNacimiento.setLayout(panelFechaNacimientoLayout);
        panelFechaNacimientoLayout.setHorizontalGroup(
            panelFechaNacimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFechaNacimientoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(29, 29, 29)
                .addComponent(dcFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFechaNacimientoLayout.setVerticalGroup(
            panelFechaNacimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFechaNacimientoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFechaNacimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dcFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("*Correo: ");

        tfCorreo.setToolTipText("Escriba el correo del usuario");

        javax.swing.GroupLayout panelCorreoLayout = new javax.swing.GroupLayout(panelCorreo);
        panelCorreo.setLayout(panelCorreoLayout);
        panelCorreoLayout.setHorizontalGroup(
            panelCorreoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCorreoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCorreoLayout.setVerticalGroup(
            panelCorreoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCorreoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelCorreoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelimagen1.setImagenFondo(new PanelImagen.ImagenFondo(new java.io.File("C:/Users/santi/OneDrive/SegundoDAM/Proyecto/MisArchivos/Ruleta SF/src/Recursos/fondo.jpg"),1.0f));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Iniciar Sesión");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/loginLogo.png"))); // NOI18N
        jLabel2.setToolTipText("Usuario");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/passwordLogo.png"))); // NOI18N
        jLabel3.setToolTipText("Contraseña");

        cbMostrarPassword.setBackground(new java.awt.Color(0, 0, 0));
        cbMostrarPassword.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cbMostrarPassword.setForeground(new java.awt.Color(255, 255, 255));
        cbMostrarPassword.setText("Mostrar Contraseña");
        cbMostrarPassword.setOpaque(false);
        cbMostrarPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMostrarPasswordActionPerformed(evt);
            }
        });

        tfUsuario.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tfUsuario.setToolTipText("Nombre de usuario");
        tfUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUsuarioActionPerformed(evt);
            }
        });

        tfPassword.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tfPassword.setToolTipText("Contraseña");
        tfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPasswordActionPerformed(evt);
            }
        });

        btEntrarComoInvitado.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btEntrarComoInvitado.setText("Entrar Como Invitado");
        btEntrarComoInvitado.setToolTipText("Entrar a la Aplicación Como Invitado");
        btEntrarComoInvitado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btEntrarComoInvitado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEntrarComoInvitadoActionPerformed(evt);
            }
        });

        labelCrearCuenta.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelCrearCuenta.setForeground(new java.awt.Color(0, 153, 153));
        labelCrearCuenta.setText("Crear Cuenta");
        labelCrearCuenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelCrearCuentaMouseClicked(evt);
            }
        });

        btEntrar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btEntrar.setText("Iniciar Sesion");
        btEntrar.setToolTipText("Iniciar Sesión");
        btEntrar.setBorder(null);
        btEntrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEntrarActionPerformed(evt);
            }
        });

        labelOlvidarContrasena.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelOlvidarContrasena.setForeground(new java.awt.Color(0, 153, 153));
        labelOlvidarContrasena.setText("¿Olvidó su contraseña?");
        labelOlvidarContrasena.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelOlvidarContrasenaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelimagen1Layout = new javax.swing.GroupLayout(jPanelimagen1);
        jPanelimagen1.setLayout(jPanelimagen1Layout);
        jPanelimagen1Layout.setHorizontalGroup(
            jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelimagen1Layout.createSequentialGroup()
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelimagen1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbMostrarPassword)
                            .addComponent(tfPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(tfUsuario)))
                    .addGroup(jPanelimagen1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelimagen1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelimagen1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(btEntrarComoInvitado)
                        .addContainerGap())
                    .addGroup(jPanelimagen1Layout.createSequentialGroup()
                        .addComponent(labelOlvidarContrasena)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelCrearCuenta)
                        .addGap(45, 45, 45))))
        );
        jPanelimagen1Layout.setVerticalGroup(
            jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelimagen1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEntrarComoInvitado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMostrarPassword)
                .addGap(45, 45, 45)
                .addComponent(btEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCrearCuenta)
                    .addComponent(labelOlvidarContrasena))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelimagen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelimagen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPasswordActionPerformed
        // TODO add your handling code here:
        aceptar();
    }//GEN-LAST:event_tfPasswordActionPerformed

    private void cbMostrarPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMostrarPasswordActionPerformed
        // TODO add your handling code here:
        if (cbMostrarPassword.isSelected()) {
            tfPassword.setEchoChar((char) 0);
        } else {
            tfPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_cbMostrarPasswordActionPerformed

    private void tfUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUsuarioActionPerformed
        // TODO add your handling code here:
        aceptar();
    }//GEN-LAST:event_tfUsuarioActionPerformed

    private void btEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEntrarActionPerformed
        // TODO add your handling code here:
        aceptar();
    }//GEN-LAST:event_btEntrarActionPerformed

    private void btEntrarComoInvitadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEntrarComoInvitadoActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Aceptar"};
        int seleccion = JOptionPane.showOptionDialog(this, panelFechaNacimiento, "Introduzca su fecha de nacimiento",
                JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (seleccion != -1) {
            if (dcFechaNacimiento.getDate() != null
                    && calculateAge(dcFechaNacimiento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(), LocalDate.now()) >= 18) {
                entrarComoInvitado();
            } else {
                JOptionPane.showMessageDialog(this, "Debes ser mayor de 18 años para acceder a esta aplicación.");
            }
        }
        dcFechaNacimiento.setDate(null);
    }//GEN-LAST:event_btEntrarComoInvitadoActionPerformed

    private void labelCrearCuentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelCrearCuentaMouseClicked
            // TODO add your handling code here:
            tfPassword.setText("");
            NuevoUsuario nu = new NuevoUsuario(this);
            nu.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_labelCrearCuentaMouseClicked

    private void labelOlvidarContrasenaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelOlvidarContrasenaMouseClicked
        // TODO add your handling code here:
        //Manda correo al usuario
        Usuario u = existeUsuario(tfUsuario.getText());

        if (u != null && u.getCorreo() != null) {
            Object[] options = {"Aceptar"};
            int seleccion = JOptionPane.showOptionDialog(this, panelCorreo, "Introduzca el correo electronico de este usuario",
                    JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (seleccion != -1) {
                if (tfCorreo.getText().equals(u.getCorreo())) {
                    try {
                        GestorMail.enviarMail(tfCorreo.getText(), u);
                        JOptionPane.showMessageDialog(this, "Se ha enviado la contraseña a su mail");
                    } catch (MessagingException ex) {
                        JOptionPane.showMessageDialog(this, "Ha habido un problema enviando el correo");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El correo introducido no es correcto");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No existe este usuario o no se puede enviar un correo a su email");
        }

        tfCorreo.setText("");
    }//GEN-LAST:event_labelOlvidarContrasenaMouseClicked

    public static int calculateAge(LocalDate birthDate, LocalDate currentDate) {
        //Calcular edad de usuario
        if ((birthDate != null) && (currentDate != null)) {
            return Period.between(birthDate, currentDate).getYears();
        } else {
            return 0;
        }
    }

    public void actualizarFechaUltimaConexion() {
        //Actualiza la fecha de ultima conexion del usuario
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String today = sdf.format(Calendar.getInstance().getTime());

        if (GestorUsuarios.getUsuarioActivo().getFechaUltimaConexion() == null ||
                !GestorUsuarios.getUsuarioActivo().getFechaUltimaConexion().toString().equals(today)) {
            //La fecha de ultima conexion no es de "hoy"
            try {
                PreparedStatement ps = null;

                ps = DataBase.getConexion().prepareStatement("update USUARIO "
                        + "set FECHAULTIMACONEXION = SYSDATE, FICHAS = ? "
                        + "where IDUSUARIO = ?");

                int fichas = GestorUsuarios.getUsuarioActivo().getFichasIniciales() + 1000;
                GestorUsuarios.getUsuarioActivo().setFichasIniciales(fichas);
                GestorUsuarios.getUsuarioActivo().setFichasFinales(fichas);
                ps.setInt(1, fichas);
                ps.setInt(2, GestorUsuarios.getUsuarioActivo().getId());

                //Ejecuta
                DataBase.ejecutaUpdateSeguro(ps);
                
                JOptionPane.showMessageDialog(this, "Has conseguido 1000 fichas por conectarte hoy!");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Problemas actualizando la fecha de conexión");
            }
        }
    }

    public Usuario existeUsuario(String nombre) {
        try {
            //Comprueba que el usuario esté en BBDD
            PreparedStatement ps = null;
            ResultSet rs = null;

            ps = DataBase.getConexion().prepareStatement("select * from usuario "
                    + "where nombre = ?");
            ps.setString(1, nombre);

            rs = ps.executeQuery();
            if (rs.next()) {
                return new Usuario(rs.getString("NOMBRE"), rs.getString("CORREO"), rs.getString("CONTRASENA"));
            }
            return null;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        return null;
    }

    public boolean comprobarDatos(String nombre, String password) {
        try {
            //Comprueba que el usuario esté en BBDD
            PreparedStatement ps = null;
            ResultSet rs = null;

            ps = DataBase.getConexion().prepareStatement("select * from usuario "
                    + "where nombre = ? and contrasena = ?");
            ps.setString(1, nombre);
            ps.setString(2, password);

            rs = ps.executeQuery();

            if (rs.next()) {
                GestorUsuarios.setUsuarioActivo(new Usuario(rs.getInt("IDUSUARIO"),
                        rs.getString("NOMBRE"), rs.getDate("FECHAULTIMACONEXION"), rs.getInt("FICHAS")));
                return true;
            } else {
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        return false;
    }

    public void aceptar() {
        //Entra con usuario a la aplicación
        //Construye la contraseña
        String password = "";
        for (int i = 0; i < tfPassword.getPassword().length; i++) {
            password += tfPassword.getPassword()[i];
        }

        tfPassword.setText("");
//            //Crea la conexion con el servidor
//            cliente = new Socket(ip, puerto);
        //Comprueba que los datos son correctos
        if (comprobarDatos(tfUsuario.getText(), password)) {
            //Conexion correcta
            //Entra como usuario

            //Update de ultimo dia de conexión
            actualizarFechaUltimaConexion();
            Menu m = new Menu(this);
            m.setVisible(true);
            this.setVisible(false);
        } else {
            //Conexion fallida
            JOptionPane.showMessageDialog(this, "Nombre de usuario o contraseña incorrectos");
        }
    }

    public void entrarComoInvitado() {
//        try {
//            //Crea la conexion con el servidor
//            cliente = new Socket(ip, puerto);
        //Entra con un usuario de prueba
        GestorUsuarios.setUsuarioActivo(null);

        Menu m = new Menu(this);
        m.setVisible(true);
        this.setVisible(false);
//        } catch (IOException ex) {
//            JOptionPane.showMessageDialog(this, ex.getMessage());
//        }
    }

    public void setParametros(String nombre, String password) {
        //Escribe parametros en los TF
        tfUsuario.setText(nombre);
        tfPassword.setText(password);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEntrar;
    private javax.swing.JButton btEntrarComoInvitado;
    private javax.swing.JCheckBox cbMostrarPassword;
    private com.toedter.calendar.JDateChooser dcFechaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private PanelImagen.jPanelimagen jPanelimagen1;
    private javax.swing.JLabel labelCrearCuenta;
    private javax.swing.JLabel labelOlvidarContrasena;
    private javax.swing.JPanel panelCorreo;
    private javax.swing.JPanel panelFechaNacimiento;
    private javax.swing.JTextField tfCorreo;
    private javax.swing.JPasswordField tfPassword;
    private javax.swing.JTextField tfUsuario;
    // End of variables declaration//GEN-END:variables
}
