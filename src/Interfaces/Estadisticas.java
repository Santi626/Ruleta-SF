/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import BaseDatos.DataBase;
import Clases.GestorUsuarios;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sun.security.util.Length;

/**
 *
 * @author santi
 */
public class Estadisticas extends javax.swing.JFrame {

    /**
     * Creates new form Estadisticas
     */
    private Menu m;
    private DefaultTableModel modeloTabla;

    public Estadisticas(Menu m) {
        initComponents();
        this.m = m;
        modeloTabla = (DefaultTableModel) tablaEstadisticas.getModel();

        this.setLocationRelativeTo(null);
        this.setTitle("Ruleta SF - Estadísticas");
        this.setIconImage(new ImageIcon(getClass().getResource("/Recursos/Logo.png")).getImage());
        this.setResizable(false);

        cargaTabla(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelimagen1 = new PanelImagen.jPanelimagen();
        labelAtras = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dcFechaFiltro = new com.toedter.calendar.JDateChooser();
        btFiltrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEstadisticas = new javax.swing.JTable();
        labelTotal = new javax.swing.JLabel();
        labelMedia = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelimagen1.setImagenFondo(new PanelImagen.ImagenFondo(new java.io.File("C:/Users/santi/OneDrive/SegundoDAM/Proyecto/MisArchivos/Ruleta SF/src/Recursos/fondo.jpg"),1.0f));

        labelAtras.setForeground(new java.awt.Color(255, 255, 255));
        labelAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/arrowBack.png"))); // NOI18N
        labelAtras.setToolTipText("Volver");
        labelAtras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelAtrasMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ESTADÍSTICAS");

        dcFechaFiltro.setBackground(new java.awt.Color(0, 51, 51));
        dcFechaFiltro.setDateFormatString("dd-MM-yyyy");
        dcFechaFiltro.setOpaque(false);

        btFiltrar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btFiltrar.setText("Filtrar");
        btFiltrar.setToolTipText("Filtra por fecha ");
        btFiltrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFiltrarActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(0, 51, 51));

        tablaEstadisticas.setBackground(new java.awt.Color(0, 51, 51));
        tablaEstadisticas.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tablaEstadisticas.setForeground(new java.awt.Color(255, 255, 255));
        tablaEstadisticas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ganancias", "Fichas Iniciales", "Fichas Finales", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEstadisticas.setToolTipText("");
        tablaEstadisticas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tablaEstadisticas);

        labelTotal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelTotal.setForeground(new java.awt.Color(255, 255, 255));
        labelTotal.setText(" Total de Ganancias: ");

        labelMedia.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelMedia.setForeground(new java.awt.Color(255, 255, 255));
        labelMedia.setText(" Media de Ganancias: ");

        javax.swing.GroupLayout jPanelimagen1Layout = new javax.swing.GroupLayout(jPanelimagen1);
        jPanelimagen1.setLayout(jPanelimagen1Layout);
        jPanelimagen1Layout.setHorizontalGroup(
            jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelimagen1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(labelAtras)
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelimagen1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMedia)
                            .addComponent(labelTotal)
                            .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanelimagen1Layout.createSequentialGroup()
                                    .addComponent(dcFechaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelimagen1Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel1)))
                .addGap(70, 70, 70))
        );
        jPanelimagen1Layout.setVerticalGroup(
            jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelimagen1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelAtras)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(jPanelimagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btFiltrar)
                    .addComponent(dcFechaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(labelTotal)
                .addGap(31, 31, 31)
                .addComponent(labelMedia)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelimagen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelimagen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFiltrarActionPerformed
        // TODO add your handling code here:
        cargaTabla(dcFechaFiltro.getDate());
    }//GEN-LAST:event_btFiltrarActionPerformed

    private void labelAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelAtrasMouseClicked
        // TODO add your handling code here:
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_labelAtrasMouseClicked

    private void cargaTabla(Date fechaFiltro) {
        //Carga los datos en la tabla
        limpiaTabla();

        PreparedStatement ps = null;
        ResultSet rs = null;

        try {
            if (fechaFiltro == null) {
                //Sin filtros
                ps = DataBase.getConexion().prepareStatement("Select * "
                        + "from ESTADISTICASUSUARIO "
                        + "where USUARIO_IDUSUARIO = ?");
                ps.setInt(1, GestorUsuarios.getUsuarioActivo().getId());
                rs = ps.executeQuery();

                //Media
                int media = 0;
                int numFilas = 0;

                if (rs.isBeforeFirst()) {
                    while (rs.next()) {
                        modeloTabla.addRow(new String[]{rs.getInt("GANANCIAS") + "", rs.getInt("FICHASINICIALES") + "",
                            rs.getInt("FICHASFINALES") + "", rs.getDate("FECHAREALIZACION").toString()});

                        media += rs.getInt("GANANCIAS");
                        numFilas++;
                    }
                    labelTotal.setText(" Total de Ganancias: " + media);
                    labelMedia.setText(" Media de Ganancias: " + media / numFilas);
                } else {
                    labelTotal.setText(" Total de Ganancias: 0");
                    labelMedia.setText(" Media de Ganancias: 0");
                }

            } else {
                //Con filtros
                ps = DataBase.getConexion().prepareStatement("Select GANANCIAS, FICHASINICIALES, FICHASFINALES, FECHAREALIZACION "
                        + "from ESTADISTICASUSUARIO "
                        + "where USUARIO_IDUSUARIO = ? AND TO_DATE(FECHAREALIZACION, 'dd/MM/yy') = TO_DATE(?, 'dd/MM/yy')");
                ps.setInt(1, GestorUsuarios.getUsuarioActivo().getId());
                ps.setDate(2, new java.sql.Date(fechaFiltro.getTime()));
                rs = ps.executeQuery();

                //Media
                int media = 0;
                int numFilas = 0;

                if (rs.isBeforeFirst()) {
                    while (rs.next()) {
                        modeloTabla.addRow(new String[]{rs.getInt(1) + "", rs.getInt(2) + "", rs.getInt(3) + "",
                            rs.getDate(4).toString()});

                        media += rs.getInt(1);
                        numFilas++;
                    }
                    labelTotal.setText(" Total de Ganancias: " + media);
                    labelMedia.setText(" Media de Ganancias: " + media / numFilas);
                } else {
                    JOptionPane.showMessageDialog(this, "No se ha encontrado ningun dato", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                    labelTotal.setText(" Total de Ganancias: 0");
                    labelMedia.setText(" Media de Ganancias: 0");
                }

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Problemas con SQL: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpiaTabla() {
//        for (int i = 0; i < tablaEstadisticas.getRowCount(); i++) {
//            modeloTabla.removeRow(0);
//        }
        while (tablaEstadisticas.getRowCount() > 0) {
            modeloTabla.removeRow(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btFiltrar;
    private com.toedter.calendar.JDateChooser dcFechaFiltro;
    private javax.swing.JLabel jLabel1;
    private PanelImagen.jPanelimagen jPanelimagen1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAtras;
    private javax.swing.JLabel labelMedia;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JTable tablaEstadisticas;
    // End of variables declaration//GEN-END:variables
}
